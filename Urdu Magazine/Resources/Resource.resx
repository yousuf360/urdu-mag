<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="ArticleDataDisplay" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="ArticleNameDisplay" xml:space="preserve">
    <value>Article Name</value>
  </data>
  <data name="Call" xml:space="preserve">
    <value>Call</value>
  </data>
  <data name="CallForArticles" xml:space="preserve">
    <value>Call for Articles</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ConfirmPasswordDisplay" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="ConfirmPasswordError" xml:space="preserve">
    <value>Confirm password doesn't match, Type again!</value>
  </data>
  <data name="CopyAndClose" xml:space="preserve">
    <value>Copy and Close</value>
  </data>
  <data name="CreateArticle" xml:space="preserve">
    <value>Create Article</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="digit1" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="digit2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="digit3" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="EmailDisplay" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailRequiredError" xml:space="preserve">
    <value>Please Enter Your Email</value>
  </data>
  <data name="EmailValidError" xml:space="preserve">
    <value>Please enter a valid email address.</value>
  </data>
  <data name="ErrorDateField" xml:space="preserve">
    <value>The Field Issue Date must be a Date.</value>
  </data>
  <data name="InvalidNumber" xml:space="preserve">
    <value>Invalid Number</value>
  </data>
  <data name="IssueDateDisplay" xml:space="preserve">
    <value>Issue Date</value>
  </data>
  <data name="IssueDisplay" xml:space="preserve">
    <value>Issue</value>
  </data>
  <data name="LogInButton" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="LogInDisplay" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="Magazine" xml:space="preserve">
    <value>Magazine</value>
  </data>
  <data name="MagazineDisplay" xml:space="preserve">
    <value>Magazine Name</value>
  </data>
  <data name="MagazineNameAlreadyUsed" xml:space="preserve">
    <value>You already have used this name</value>
  </data>
  <data name="NumberOfColumnsDisplay" xml:space="preserve">
    <value>Number of columns</value>
  </data>
  <data name="NumberOfSubmissions" xml:space="preserve">
    <value>Number Of Submissions</value>
  </data>
  <data name="PasswordDisplay" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Please fill the required field!</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchForMagazines" xml:space="preserve">
    <value>Search for Magazines</value>
  </data>
  <data name="SeeDetails" xml:space="preserve">
    <value>See Details</value>
  </data>
  <data name="SelectDisplay" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectError" xml:space="preserve">
    <value>Please select an item from list</value>
  </data>
  <data name="SelectIssue" xml:space="preserve">
    <value>Select Issue</value>
  </data>
  <data name="SignUpButton" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="SignUpDisplay" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>Step 1</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>Step 2</value>
  </data>
  <data name="Step3" xml:space="preserve">
    <value>Step 3</value>
  </data>
  <data name="StopCall" xml:space="preserve">
    <value>Stop Call</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SubmitArticle" xml:space="preserve">
    <value>Submit Article</value>
  </data>
  <data name="SubmittedArticlesListDisplay" xml:space="preserve">
    <value>Submitted articles list</value>
  </data>
  <data name="TypeInUrdu" xml:space="preserve">
    <value>Type In Urdu</value>
  </data>
  <data name="WebSiteTitle" xml:space="preserve">
    <value>E-Magazine &lt;em&gt;...&lt;/em&gt;</value>
  </data>
  <data name="AlreadyAMember" xml:space="preserve">
    <value>Already a member?</value>
  </data>
  <data name="ChooseArticles" xml:space="preserve">
    <value>Choose Articles</value>
  </data>
  <data name="CompanyLink" xml:space="preserve">
    <value>Urdu Magazine By Code2Code</value>
  </data>
  <data name="CreateAnAccount" xml:space="preserve">
    <value>Create an Account</value>
  </data>
  <data name="CreateNewIssue" xml:space="preserve">
    <value>Create New Issue</value>
  </data>
  <data name="EnterNewMagazine" xml:space="preserve">
    <value>Enter New Magazine</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="NewToSite" xml:space="preserve">
    <value>New To Site?</value>
  </data>
  <data name="NoNotificationYet" xml:space="preserve">
    <value>No notifications yet</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Publish" xml:space="preserve">
    <value>Publish</value>
  </data>
  <data name="PublishAnIssue" xml:space="preserve">
    <value>Publish An Issue</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShowAllArticles" xml:space="preserve">
    <value>Show All Articles</value>
  </data>
  <data name="ShowAllIssues" xml:space="preserve">
    <value>Show All Issues</value>
  </data>
  <data name="ShowAllMagazines" xml:space="preserve">
    <value>Show All Magazines</value>
  </data>
  <data name="TermsAndCondition" xml:space="preserve">
    <value>©2016 All Rights Reserved. Gentelella Alela! is a Bootstrap 3 template. Privacy and Terms</value>
  </data>
  <data name="UrduMagazine" xml:space="preserve">
    <value>Urdu Magazine</value>
  </data>
  <data name="YourArticles" xml:space="preserve">
    <value>Your Articles</value>
  </data>
  <data name="YourMagazines" xml:space="preserve">
    <value>Your Magazines</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
    <value>Get Started</value>
  </data>
  <data name="CannotUploadThisFileTryAgain" xml:space="preserve">
    <value>Cannot upload this file. Try Again.</value>
  </data>
  <data name="CategoryOfArticle" xml:space="preserve">
    <value>Article's Category</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="EmailAlreadyExistsError" xml:space="preserve">
    <value>Email already exists. Please enter a different Email.</value>
  </data>
  <data name="LoginFailedWithGivenInformation" xml:space="preserve">
    <value>Login Failed with given Information.</value>
  </data>
  <data name="IssuesCover" xml:space="preserve">
    <value>Issue's Cover</value>
  </data>
  <data name="MagazinesCover" xml:space="preserve">
    <value>Magazine's Cover</value>
  </data>
  <data name="NoArticlesSubmittedForThisIssueYet" xml:space="preserve">
    <value>No articles submitted for this issue yet</value>
  </data>
  <data name="Published" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="Unpublish" xml:space="preserve">
    <value>Unpublish</value>
  </data>
  <data name="ReadArticle" xml:space="preserve">
    <value>Read Article</value>
  </data>
  <data name="ArticlesSumbissionDate" xml:space="preserve">
    <value>Articles Sumbission Date</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="AllArticles" xml:space="preserve">
    <value>All Articles</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Unpublished" xml:space="preserve">
    <value>Unpublished</value>
  </data>
  <data name="EditArticle" xml:space="preserve">
    <value>Edit Article</value>
  </data>
  <data name="ArticleDeleteConfirmationMessage" xml:space="preserve">
    <value>Are you sure you want to delete this article!</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Writer" xml:space="preserve">
    <value>Writer</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="RomanUrduTyping" xml:space="preserve">
    <value>Roman Urdu Typing</value>
  </data>
  <data name="Ads" xml:space="preserve">
    <value>Ads</value>
  </data>
  <data name="ChooseAds" xml:space="preserve">
    <value>Choose Ads</value>
  </data>
  <data name="UploadMedia" xml:space="preserve">
    <value>Upload Media</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="SelectFile" xml:space="preserve">
    <value>Select File</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="FullPage" xml:space="preserve">
    <value>Full Page</value>
  </data>
  <data name="InArticle" xml:space="preserve">
    <value>In Article</value>
  </data>
  <data name="YourProfile" xml:space="preserve">
    <value>Your Profile</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="NewPasswordDisplay" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="ProfilePicture" xml:space="preserve">
    <value>Profile Picture</value>
  </data>
  <data name="PasswordDoesNotMatch" xml:space="preserve">
    <value>Password Does Not Match</value>
  </data>
  <data name="MagazinesCategories" xml:space="preserve">
    <value>Magazine's Categories</value>
  </data>
  <data name="AcceptedNotificationText" xml:space="preserve">
    <value>has accepted your article</value>
  </data>
  <data name="CallForArticleNotificationText" xml:space="preserve">
    <value>has requested for articles</value>
  </data>
  <data name="CommentedNotificationText" xml:space="preserve">
    <value>commented on your issue.</value>
  </data>
  <data name="PublishNotificationText" xml:space="preserve">
    <value>has published the issue</value>
  </data>
  <data name="SubmittedNotificationText" xml:space="preserve">
    <value>has submitted article for your issue</value>
  </data>
  <data name="April" xml:space="preserve">
    <value>April</value>
  </data>
  <data name="August" xml:space="preserve">
    <value>August</value>
  </data>
  <data name="December" xml:space="preserve">
    <value>December</value>
  </data>
  <data name="February" xml:space="preserve">
    <value>February</value>
  </data>
  <data name="January" xml:space="preserve">
    <value>January</value>
  </data>
  <data name="July" xml:space="preserve">
    <value>July</value>
  </data>
  <data name="June" xml:space="preserve">
    <value>June</value>
  </data>
  <data name="March" xml:space="preserve">
    <value>March</value>
  </data>
  <data name="May" xml:space="preserve">
    <value>May</value>
  </data>
  <data name="November" xml:space="preserve">
    <value>November</value>
  </data>
  <data name="October" xml:space="preserve">
    <value>October</value>
  </data>
  <data name="September" xml:space="preserve">
    <value>September</value>
  </data>
</root>