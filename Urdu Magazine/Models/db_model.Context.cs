//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Urdu_Magazine.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class fyp_dbEntities : DbContext
    {
        public fyp_dbEntities()
            : base("name=fyp_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Article> Articles { get; set; }
        public virtual DbSet<Article_Issue> Article_Issue { get; set; }
        public virtual DbSet<Article_Rating> Article_Rating { get; set; }
        public virtual DbSet<Article_Submit_Info> Article_Submit_Info { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<fullPageAd> fullPageAds { get; set; }
        public virtual DbSet<inPageAd> inPageAds { get; set; }
        public virtual DbSet<Issue> Issues { get; set; }
        public virtual DbSet<Magazine> Magazines { get; set; }
        public virtual DbSet<Magazine_Category> Magazine_Category { get; set; }
        public virtual DbSet<PreviewAricle> PreviewAricles { get; set; }
        public virtual DbSet<UploadMedia> UploadMedias { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Notification_type> Notification_type { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
    
        public virtual ObjectResult<get_notification_Result> get_notification(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_notification_Result>("get_notification", userIdParameter);
        }
    }
}
